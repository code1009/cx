/////////////////////////////////////////////////////////////////////////////
//===========================================================================
#pragma once





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
namespace cx::gw
{





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
class Color
{
public:
	float _r{0.0f};
	float _g{0.0f};
	float _b{0.0f};
	float _a{1.0f};

public:
	Color() = default;

public:
	explicit Color(float R, float G, float B, float A = 1.0f);

public:
	virtual ~Color() = default;

public:
	bool operator== (const Color& v) const;
	bool operator!= (const Color& v) const;
};





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
std::wstring to_std_wstring(const Color& v);
Color to_Color(const std::wstring& v);





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
}




