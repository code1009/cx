/////////////////////////////////////////////////////////////////////////////
//===========================================================================
#include "pch.hpp"

//===========================================================================
#include "net_msg.hpp"





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
namespace cx
{
namespace network
{





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
net_msg::net_msg():
	_id(0U),
	_data()
{
	reset();
}

//===========================================================================
void net_msg::reset(void)
{
	_id = 0U;
	_data.clear();
	_data.reserve(4096);
}

//===========================================================================
net_msg::net_msg(const net_msg& other) :
	_id(other._id),
	_data(other._data)
{

}

net_msg& net_msg::operator=(const net_msg& other)
{
	if (this != &other) 
	{
		_id = other._id;
		_data = other._data;
	}

	return *this;
}

//===========================================================================
net_msg::net_msg(net_msg&& other) noexcept :
	_id(std::move(other._id)),
	_data(std::move(other._data))
{

}

net_msg& net_msg::operator=(net_msg&& other) noexcept
{
	if (this != &other) 
	{
		_id = std::move(other._id);
		_data = std::move(other._data);
	}

	return *this;
}





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
}
}
